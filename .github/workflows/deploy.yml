name: Bump & Deploy to CoreWeave

on:
  push:
    branches:
      - main
    paths:
      - 'docs/index.html'

permissions:
  contents: write   # we need this to commit & tag version.txt
  packages: write   # so GITHUB_TOKEN (or GHCR_PAT) can push your image

env:
  # where weâ€™ll write your Kube config for kubectl
  KUBECONFIG: ${{ github.workspace }}/cks.kubeconfig

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Bump version
        id: bump
        run: |
          # read current version, bump it
          CURRENT=$(cat version.txt)
          NEXT=$(( ${CURRENT#v} + 1 ))
          NEW="v$NEXT"
          echo "$NEW" > version.txt

          # commit & tag
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "ci: bump version to $NEW"
          git tag "$NEW"

          # push both the commit & the tag
          git push origin main --follow-tags

          # expose the new version to later steps
          echo "new_version=$NEW" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/sr1ram/sr1ram:${{ steps.bump.outputs.new_version }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > "$KUBECONFIG"

      - name: Deploy ${{ steps.bump.outputs.new_version }} to CoreWeave CKS
        run: |
          kubectl --kubeconfig="$KUBECONFIG" \
            set image deployment/sr1ram nginx=ghcr.io/sr1ram/sr1ram:${{ steps.bump.outputs.new_version }}
          kubectl --kubeconfig="$KUBECONFIG" \
            rollout status deployment/sr1ram --timeout=5m
