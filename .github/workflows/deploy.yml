name: Bump & Deploy to CoreWeave

on:
  push:
    branches:
      - main

permissions:
  contents: write   # for committing version.txt bumps
  packages: write   # for pushing images (if using GITHUB_TOKEN) or required by docker/login

jobs:
  bump:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.get-version.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Detect docs/index.html change
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters:
            docs:
              - 'docs/index.html'

      - name: Bump version
        if: steps.changes.outputs.docs == 'true'
        run: |
          CURRENT=$(cat version.txt)
          NUMBER=${CURRENT#v}
          NEXT=$((NUMBER + 1))
          NEW="v$NEXT"
          echo "$NEW" > version.txt
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "ci: bump version to $NEW"
          git tag "$NEW"
          git push origin main --follow-tags

      - name: Skip bump
        if: steps.changes.outputs.docs != 'true'
        run: echo "No docs/index.html change; keeping version $(cat version.txt)"

      - name: Read version
        id: get-version
        run: echo "new_version=$(cat version.txt)" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: bump
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ needs.bump.outputs.new_version }}
      KUBECONFIG: ${{ github.workspace }}/cks.kubeconfig

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push Docker image ${{ env.IMAGE_TAG }}
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/sr1ram/sr1ram:${{ env.IMAGE_TAG }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > "$KUBECONFIG"

      - name: Deploy ${{ env.IMAGE_TAG }} to CoreWeave CKS
        run: |
          kubectl --kubeconfig="$KUBECONFIG" \
            set image deployment/sr1ram nginx=ghcr.io/sr1ram/sr1ram:${{ env.IMAGE_TAG }}
          kubectl --kubeconfig="$KUBECONFIG" \
            rollout status deployment/sr1ram --timeout=5m
